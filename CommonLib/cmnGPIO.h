#pragma once

/*==============================================================================
This provides a wrapper for the gpio facilities.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Cmn
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides a set of variables that are used to define thread
// priorities and thread single processor numbers for threads in these
// programs.

class GPIO
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   static const int cAStopBit = 15;
   static const int cFeynmanResetBit = 13;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   GPIO();

   // Device initialize and finalize.
   void initialize();
   void finalize();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Write to tthe digital output for G38.3 virtual stop.
   void writeAStop(bool aValue);

   // Hit the Feynman reset bit.
   // Jason says go low to reset then bring back to high(not driven).
   void doFeynmanReset();
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global singular instance.

#ifdef _CMNGPIO_CPP_
          GPIO gGPIO;
#else
   extern GPIO gGPIO;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

