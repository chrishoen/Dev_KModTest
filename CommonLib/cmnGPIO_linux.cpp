/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"
#include "wiringPi.h"
#include "risThreadsThreads.h"

#define  _CMNGPIO_CPP_
#include "cmnGPIO.h"

namespace Cmn
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor.

GPIO::GPIO()
{
}

void GPIO::initialize()
{
   wiringPiSetupGpio();
   pinMode(cGpioA, OUTPUT);
   pinMode(cGpioB, INPUT);
}

void GPIO::finalize()
{

}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Write to the digital output for gpio A.

void GPIO::writeA(bool aValue)
{
   if (aValue)
   {
      digitalWrite(cGpioA, HIGH);
   }
   else
   {
      digitalWrite(cGpioA, LOW);
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Read from the digital output for gpio B.

bool GPIO::readB()
{
   return digitalRead(cGpioB) == HIGH;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace
