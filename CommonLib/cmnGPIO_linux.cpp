/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"
#include "wiringPi.h"
#include "risThreadsThreads.h"

#define  _CMNGPIO_CPP_
#include "cmnGPIO.h"

namespace Cmn
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor.

GPIO::GPIO()
{
}

void GPIO::initialize()
{
   wiringPiSetupPhys();
   pinMode(cAStopBit, OUTPUT);
   pinMode(cFeynmanResetBit, OUTPUT);
}

void GPIO::finalize()
{

}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Write to tthe digital output for G38.3 virtual stop.

void GPIO::writeAStop(bool aValue)
{
   if (aValue)
   {
      digitalWrite(cAStopBit, HIGH);
   }
   else
   {
      digitalWrite(cAStopBit, LOW);
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Strobe the Feynman reset bit.
// Jason says go low to reset then bring back to high(not driven).

void GPIO::doFeynmanReset()
{
   digitalWrite(cFeynmanResetBit, LOW);
   Ris::Threads::threadSleep(2000);
   digitalWrite(cFeynmanResetBit, HIGH);
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace
